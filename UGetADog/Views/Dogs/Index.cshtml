@model IEnumerable<UGetADog.Models.Dog>

@{
    ViewBag.Title = "Dogs";
}

<section id="search">
    @using (Html.BeginForm("Search", "Dogs", FormMethod.Get))
    {
        var dog = new UGetADog.Models.Dog();
       // insert check if user role

        <div class="searchContriner">
            @Html.LabelFor(model => dog.Age, htmlAttributes: new { @class = "control-label col-md-3" })
            <span class="col-md-4">
                @Html.EditorFor(model => dog.Age, new { htmlAttributes = new { @class = "form-control" } })
            </span>
        </div>
        <div class="searchContriner">
            @Html.LabelFor(model => dog.Breed, htmlAttributes: new { @class = "control-label col-md-3" })
            <span class="col-md-4">
                @Html.EditorFor(model => dog.Breed, new { htmlAttributes = new { @class = "form-control" } })
            </span>
       </div>
        <div class="searchContriner">
            @Html.LabelFor(model => dog.Gender, htmlAttributes: new { @class = "control-label col-md-3" })
            <span class="col-md-4">
                @Html.EditorFor(model => dog.Gender, new { htmlAttributes = new { @class = "form-control" } })
            </span>
        </div>
        <div class="searchContriner">
            <input class="btn btn-default" type="submit" name="Search" value="חפש" />
        </div>
        //add searches for admin
    }
</section>
    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    @if (Model.Count() > 0)
    {
        <table id="dogsTable" class="table">
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Name)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Age)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Breed)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Trained)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Immune)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Castrated)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Gender)
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Age)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Breed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Trained)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Immune)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Castrated)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.DogID }) |
                    @Html.ActionLink("Details", "Details", new { id = item.DogID }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.DogID }) |
                    @Html.ActionLink("Contact", "Contact", new { id = item.DogID })
                </td>
            </tr>
            }

        </table>
    }
